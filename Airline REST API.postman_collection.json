{
	"info": {
		"_postman_id": "8910ac98-3c82-47e7-96fc-2548f87907c5",
		"name": "Airline REST API",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "21439143"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Success",
					"item": [
						{
							"name": "Obtain Authentication Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Got a token\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.environment.set(\"token\", jsonData.token);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"user\",\n    \"password\": \"1234\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/api-token-auth/"
							},
							"response": []
						}
					]
				},
				{
					"name": "Fail",
					"item": [
						{
							"name": "Wrong passw Obtain Auth TokenWrong passw Obtain Auth Token",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"user\",\r\n    \"password\": \"12345\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/api-token-auth/"
							},
							"response": []
						},
						{
							"name": "Wrong username Obtain Auth TokenWrong passw Obtain Auth Token Copy",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"username\",\r\n    \"password\":\"1234\"\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/api-token-auth/"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Airline",
			"item": [
				{
					"name": "Success",
					"item": [
						{
							"name": "Create an Airline",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
											"});",
											"pm.test(\"Created an Airline\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.name).to.eql(\"Turkish Airlines\");",
											"    pm.environment.set(\"airline_id\", jsonData.id);",
											"    pm.environment.set(\"airline_name\", jsonData.name);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Deneme Airways\",\n    \"callsign\": \"INDIA\",\n    \"founded_year\": 1966,\n    \"base_airport\": \"SVA\",\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/airline/"
							},
							"response": []
						},
						{
							"name": "Update an Airline",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Created an Airline\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.founded_year).to.eql(1984);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"United Airlines\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/airline/4"
							},
							"response": []
						},
						{
							"name": "Retrieve an Airline",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Retrieved an Airline\", function () {",
											"    var airlineName = pm.environment.get(\"airline_name\");",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.name).to.eql(airlineName);",
											"    pm.expect(jsonData.aircraft_set).to.eql([]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{url}}/airline/{{airline_id}}"
							},
							"response": []
						},
						{
							"name": "List All Airlines",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{url}}/airline/"
							},
							"response": []
						},
						{
							"name": "Delete an Airline",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/airline/4"
							},
							"response": []
						}
					]
				},
				{
					"name": "Fail",
					"item": [
						{
							"name": "Create an Airline with Same Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
											"});",
											"pm.test(\"Created an Airline\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.name).to.eql(\"Turkish Airlines\");",
											"    pm.environment.set(\"airline_id\", jsonData.id);",
											"    pm.environment.set(\"airline_name\", jsonData.name);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"SUN EXPRESS\",\n    \"callsign\": \"TURKISH\",\n    \"founded_year\": 2020,\n    \"base_airport\": \"ANT\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/airline/"
							},
							"response": []
						},
						{
							"name": "Create an Airline Invalid Fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
											"});",
											"pm.test(\"Created an Airline\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.name).to.eql(\"Turkish Airlines\");",
											"    pm.environment.set(\"airline_id\", jsonData.id);",
											"    pm.environment.set(\"airline_name\", jsonData.name);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Deneme3 Airways\",\n    \"callsign\": \"INDIA\",\n    \"founded_year\": 1966,\n    \"base_airport\": \"SVA\",\n    \"deneme\": \"3\"\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/airline/"
							},
							"response": []
						},
						{
							"name": "Create an Airline with Invalid Founded_year",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
											"});",
											"pm.test(\"Created an Airline\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.name).to.eql(\"Turkish Airlines\");",
											"    pm.environment.set(\"airline_id\", jsonData.id);",
											"    pm.environment.set(\"airline_name\", jsonData.name);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"SUN EXPRESS\",\n    \"callsign\": \"TURKISH\",\n    \"founded_year\": 2020,\n    \"base_airport\": \"ANT\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/airline/"
							},
							"response": []
						},
						{
							"name": "Update a Deleted Airline",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Created an Airline\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.founded_year).to.eql(1984);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\n    \"deneme\": \"3\"\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/airline/5"
							},
							"response": []
						},
						{
							"name": "Update a Airline with Invalid Fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Created an Airline\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.founded_year).to.eql(1984);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"United Airlines\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/airline/4"
							},
							"response": []
						},
						{
							"name": "Retrieve an airline with non-exist id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Retrieved an Airline\", function () {",
											"    var airlineName = pm.environment.get(\"airline_name\");",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.name).to.eql(airlineName);",
											"    pm.expect(jsonData.aircraft_set).to.eql([]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{url}}/airline/{{airline_id}}"
							},
							"response": []
						},
						{
							"name": "Delete an Airline non exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/airline/4"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Aircraft",
			"item": [
				{
					"name": "Success",
					"item": [
						{
							"name": "Create an Aircraft",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
											"});",
											"pm.test(\"Created an Airline\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.manufacturer_serial_number).to.eql(\"4629\");",
											"    pm.environment.set(\"aircraft_id\", jsonData.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"manufacturer_serial_number\": \"4629\",\n    \"type\": \"Airbus\",\n    \"model\": \"Airbus A319-132\",\n    \"operator_airline\": {{airline_id}},\n    \"number_of_engines\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/aircraft/"
							},
							"response": []
						},
						{
							"name": "Update an Aircraft",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Created an Airline\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.manufacturer_serial_number).to.eql(\"2033\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"deneme\": \"3\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/aircraft/3"
							},
							"response": []
						},
						{
							"name": "Retrieve an Aircraft",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Retrieved an Aircraft\", function () {",
											"    var aircraftType = pm.environment.get(\"aircraft_type\");",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"Airbus\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{url}}/aircraft/{{aircraft_id}}"
							},
							"response": []
						},
						{
							"name": "Delete an Aircraft",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/aircraft/2"
							},
							"response": []
						},
						{
							"name": "List All Aircrafts",
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{url}}/aircraft"
							},
							"response": []
						}
					]
				},
				{
					"name": "Fail",
					"item": [
						{
							"name": "Create an Aircraft with existed Serial Number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
											"});",
											"pm.test(\"Created an Airline\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.manufacturer_serial_number).to.eql(\"4629\");",
											"    pm.environment.set(\"aircraft_id\", jsonData.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"manufacturer_serial_number\": \"4629\",\n    \"type\": \"Airbus\",\n    \"model\": \"Airbus A319-132\",\n    \"operator_airline\": {{airline_id}},\n    \"number_of_engines\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/aircraft/"
							},
							"response": []
						},
						{
							"name": "Create an Aircraft with Invalid Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
											"});",
											"pm.test(\"Created an Airline\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.manufacturer_serial_number).to.eql(\"4629\");",
											"    pm.environment.set(\"aircraft_id\", jsonData.id);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"manufacturer_serial_number\": \"unq2\",\n    \"type\": \"Airbus\",\n    \"model\": \"Airbus A319-132\",\n    \"operator_airline\": 1,\n    \"number_of_engines\": 2,\n    \"number_of_engines\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/aircraft/"
							},
							"response": []
						},
						{
							"name": "Create an Aircraft with invalid Airline Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
											"});",
											"pm.test(\"Created an Airline\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.manufacturer_serial_number).to.eql(\"4629\");",
											"    pm.environment.set(\"aircraft_id\", jsonData.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"manufacturer_serial_number\": \"4629\",\n    \"type\": \"Airbus\",\n    \"model\": \"Airbus A319-132\",\n    \"operator_airline\": {{airline_id}},\n    \"number_of_engines\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/aircraft/"
							},
							"response": []
						},
						{
							"name": "Create an Aircraft with Deleted Airline",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
											"});",
											"pm.test(\"Created an Airline\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.manufacturer_serial_number).to.eql(\"4629\");",
											"    pm.environment.set(\"aircraft_id\", jsonData.id);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"manufacturer_serial_number\": \"4629\",\n    \"type\": \"Airbus\",\n    \"model\": \"Airbus A319-132\",\n    \"operator_airline\": {{airline_id}},\n    \"number_of_engines\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/aircraft/"
							},
							"response": []
						},
						{
							"name": "Update an Non Exist Aircraft",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Created an Airline\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.manufacturer_serial_number).to.eql(\"2033\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"manufacturer_serial_number\": \"2033\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/aircraft/6"
							},
							"response": []
						},
						{
							"name": "Update an Non Exist Aircraft Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Created an Airline\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.manufacturer_serial_number).to.eql(\"2033\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"manufacturer_serial_number\": \"4629\",\n        \"deneme\" : \"3\"\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/aircraft/3"
							},
							"response": []
						},
						{
							"name": "Delete an Aircraft non-exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{url}}/aircraft/2"
							},
							"response": []
						},
						{
							"name": "Retrieve an Aircraft non-exist ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Retrieved an Aircraft\", function () {",
											"    var aircraftType = pm.environment.get(\"aircraft_type\");",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.type).to.eql(\"Airbus\");",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": "{{url}}/aircraft/2"
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": {
			"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzIzMzI0NTU5LCJpYXQiOjE3MjMzMjA5NTksImp0aSI6IjJkODhjNzE3NTk4YzQzNWI5MWZjN2M0NDBiZDFlOThiIiwidXNlcl9pZCI6MX0.FM6LlWIgDKSlcFiqTzi9aPmSL6qRnqzHZOWP25uQlOk"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "url",
			"value": "",
			"type": "string"
		},
		{
			"key": "aircraft_id",
			"value": "aircraft_id"
		},
		{
			"key": "airline_id",
			"value": "airline_id"
		},
		{
			"key": "airline_name",
			"value": "",
			"type": "string"
		},
		{
			"key": "aircraft_type",
			"value": "",
			"type": "string"
		}
	]
}